package com.kuklin.manageapp.bots.bookingbot.telegram.handlers.bookingprocess;

import com.kuklin.manageapp.bots.bookingbot.entities.Booking;
import com.kuklin.manageapp.bots.bookingbot.entities.BookingObject;
import com.kuklin.manageapp.bots.bookingbot.entities.ConversationState;
import com.kuklin.manageapp.bots.bookingbot.services.BookingObjectService;
import com.kuklin.manageapp.bots.bookingbot.services.BookingService;
import com.kuklin.manageapp.bots.bookingbot.services.ConversationStateService;
import com.kuklin.manageapp.bots.bookingbot.telegram.BookingTelegramBot;
import com.kuklin.manageapp.common.entities.TelegramUser;
import com.kuklin.manageapp.common.library.tgmodels.TelegramBot;
import com.kuklin.manageapp.common.library.tgutils.Command;
import com.kuklin.manageapp.common.library.tgutils.TelegramKeyboard;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.CallbackQuery;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.Locale;

@Component
@RequiredArgsConstructor
public class BookingUpdateHandler implements com.kuklin.manageapp.bots.bookingbot.telegram.handlers.BookingUpdateHandler {
    private final BookingService bookingService;
    private final ConversationStateService conversationStateService;
    private final BookingTelegramBot bookingTelegramBot;
    private final BookingObjectService bookingObjectService;
    private static final String RESPONSE_MSG = "‚úç –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏ —Å –≤–∞–º–∏.";
    private static final String BACK_TXT = "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—é";
    private static final String BACK_CMD = Command.BOOKING_CALENDAR.getCommandText() + TelegramBot.DEFAULT_DELIMETER + "%s";

    /*
    –û–∂–∏–¥–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ callback
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞
    –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏, —Å–æ —Å—Ç–∞—Å–æ–º –≤ "–ø—Ä–æ—Ü–µ—Å—Å–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"
     */
    @Override
    public void handle(Update update, TelegramUser telegramUser) {
        //–†–∞–∑–±–∏–µ–Ω–∏–µ update –Ω–∞ –¥–∞–Ω–Ω—ã–µ
        CallbackQuery callbackQuery = update.getCallbackQuery();
        Long chatId = callbackQuery.getMessage().getChatId();
        String data = callbackQuery.getData();

        //–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ id –æ–±—ä–µ–∫—Ç–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑ –ø—Ä–∏—à–µ–¥—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö
        Long bookingObjectId = extractBookingObjectId(data);
        //–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –∏–∑ –ø—Ä–∏—à–µ–¥—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö
        LocalDateTime[] localDateTimes = extractLocalDate(data);

        //–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏
        Booking booking = new Booking()
                .setBookingObjectId(bookingObjectId)
                .setTelegramUserId(telegramUser.getTelegramId())
                .setStatus(Booking.Status.BOOKING)
                .setStartTime(localDateTimes[0])
                .setEndTime(localDateTimes[1])
                ;
        //–ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        bookingService.saveAndUnbookOtherBookProcessing(booking);

        //–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –¥–ª—è –∑–∞–ø–æ–ª–µ–Ω–∏–Ω–∏—è —Ñ–æ—Ä–º—ã
        conversationStateService.setConversationState(
                telegramUser.getTelegramId(), ConversationState.Step.FILL_FORM
        );

        bookingTelegramBot.sendEditMessage(
                chatId,
                getResponseMsg(bookingObjectId, localDateTimes),
                callbackQuery.getMessage().getMessageId(),
                getBackButton(BACK_TXT, String.format(BACK_CMD, bookingObjectId))
                );
    }

    private String getResponseMsg(Long bookingObjectId, LocalDateTime[] localDate) {
        BookingObject bookingObject = bookingObjectService
                .getByIdOrNull(bookingObjectId);

        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("d MMMM yyyy", new Locale("ru"));
        DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern("HH:mm");

        StringBuilder sb = new StringBuilder();
        sb.append("‚ú® ").append(bookingObject.getName()).append(" ‚ú®").append("\n\n");
        sb.append("üìÖ ").append(localDate[0].format(dateFormatter)).append("\n");
        sb.append("‚è∞ ").append(localDate[0].format(timeFormatter))
                .append(" ‚Äì ").append(localDate[1].format(timeFormatter)).append("\n\n");
        sb.append(RESPONSE_MSG).append("\n");
        sb.append("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ");

        return sb.toString();
    }

    /*
    –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    */
    private InlineKeyboardMarkup getBackButton(String text, String data) {
        return TelegramKeyboard.getSingleButtonKeyboard(text, data);
    }

    /*
    –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ id –±—Ä–æ–Ω–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞, –∏–∑ –¥–∞–Ω–Ω—ã—Ö
     */
    private Long extractBookingObjectId(String data) {
        String[] parts = data.split(TelegramBot.DEFAULT_DELIMETER);
        return Long.parseLong(parts[1]);
    }

    /*
    –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
     */
    private LocalDateTime[] extractLocalDate(String data) {
        //bookingUpdateHandler.getHandlerListName() + " " + bookingObjectId + " " + DELIMETER + localDate + DELIMETER + label;
        String[] parts = data.split(TelegramKeyboard.DELIMETER);
        // parts[0] = handler name
        // parts[1] = –¥–∞—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "2025-09-30")
        // parts[2] = –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤—Ä–µ–º–µ–Ω–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "09:00‚Äì09:30")

        LocalDate date = LocalDate.parse(parts[1]);
        String[] timeRange = parts[2].split("‚Äì");

        LocalTime startTime = LocalTime.parse(timeRange[0]);
        LocalTime endTime = LocalTime.parse(timeRange[1]);

        LocalDateTime start = date.atTime(startTime);
        LocalDateTime end = date.atTime(endTime);

        return new LocalDateTime[] {start, end};
    }

    @Override
    public String getHandlerListName() {
        return Command.BOOKING_BOOK.getCommandText();
    }
}
